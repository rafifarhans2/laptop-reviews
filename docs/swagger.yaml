definitions:
  controllers.BrandInput:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  controllers.CategoryInput:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  controllers.ChangePasswordInput:
    properties:
      current_password:
        type: string
      new_password:
        type: string
    required:
    - current_password
    - new_password
    type: object
  controllers.CommentInput:
    properties:
      description:
        type: string
      laptop_id:
        type: integer
      rating:
        type: integer
    required:
    - description
    - laptop_id
    - rating
    type: object
  controllers.LaptopInput:
    properties:
      brand_id:
        type: integer
      category_id:
        type: integer
      name:
        type: string
      price:
        type: number
      release_year:
        type: integer
      spec:
        type: string
    required:
    - brand_id
    - category_id
    - name
    type: object
  controllers.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.ProfileInput:
    properties:
      bio:
        type: string
      fullname:
        type: string
    required:
    - bio
    - fullname
    type: object
  controllers.RegisterInput:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /api/brand:
    post:
      description: Create a new Brand.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to create a brand
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.BrandInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new Brand.
      tags:
      - Brand
  /api/brand/{id}:
    delete:
      description: Delete a brand by ID.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Brand ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a brand.
      tags:
      - Brand
    get:
      description: Get a brand by ID.
      parameters:
      - description: Brand ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get a brand.
      tags:
      - Brand
    put:
      description: Update a brand by ID.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Brand ID
        in: path
        name: id
        required: true
        type: string
      - description: the body to update a brand
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.BrandInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a brand.
      tags:
      - Brand
  /api/brands:
    get:
      description: Get a list of all brand.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all brands.
      tags:
      - Brand
  /api/categories:
    get:
      description: Get a list of all categories.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all categories.
      tags:
      - Category
  /api/category:
    post:
      description: Create a new category.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to create a category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CategoryInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new category.
      tags:
      - Category
  /api/category/{id}:
    delete:
      description: Delete a category by ID.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a category.
      tags:
      - Category
    get:
      description: Get a category by ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get a category.
      tags:
      - Category
    put:
      description: Update a category by ID.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: the body to update a category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CategoryInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a category.
      tags:
      - Category
  /api/comment:
    post:
      description: Create a new comment for a laptop.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to create a comment
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CommentInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new comment.
      tags:
      - Comment
  /api/comment/{id}:
    delete:
      description: Delete a comment by ID.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a comment.
      tags:
      - Comment
    get:
      description: Get a comment by ID.
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get a comment.
      tags:
      - Comment
    put:
      description: Update a comment by ID.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment ID
        in: path
        name: id
        required: true
        type: string
      - description: the body to update a comment
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CommentInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a comment.
      tags:
      - Comment
  /api/comments:
    get:
      description: Get a list of all comments.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all comments.
      tags:
      - Comment
  /api/laptop:
    post:
      description: Create a new laptop.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to create a laptop
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LaptopInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new laptop.
      tags:
      - Laptop
  /api/laptop/{id}:
    delete:
      description: Delete a laptop by ID.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Laptop ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a laptop.
      tags:
      - Laptop
    get:
      description: Get a laptop by ID.
      parameters:
      - description: Laptop ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get a laptop.
      tags:
      - Laptop
    put:
      description: Update a laptop by ID.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Laptop ID
        in: path
        name: id
        required: true
        type: string
      - description: the body to update a laptop
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LaptopInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a laptop.
      tags:
      - Laptop
  /api/laptops:
    get:
      description: Get a list of all laptops.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all laptops.
      tags:
      - Laptop
  /api/profile:
    post:
      description: Create a new profile for a user.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to create a profile
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.ProfileInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Profile already exists for this user
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create profile
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new profile.
      tags:
      - Profile
    put:
      description: Update a profile by user ID.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to update a profile
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.ProfileInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Profile not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to update profile
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a profile.
      tags:
      - Profile
  /api/profiles:
    get:
      description: Get a profile by user ID.
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Profile not found
          schema:
            additionalProperties: true
            type: object
      summary: Get a profile.
      tags:
      - Profile
  /auth/change-password:
    put:
      description: Changing password for a logged-in user.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to change password for a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Change password for a user.
      tags:
      - Auth
  /login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login as as user.
      tags:
      - Auth
  /register:
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a user.
      tags:
      - Auth
swagger: "2.0"
